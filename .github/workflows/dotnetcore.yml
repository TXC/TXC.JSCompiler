name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --configuration Release --no-build

  publish:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Publish NuGet
      id: publish_nuget
      uses: alirezanet/publish-nuget@v3.1.0
      with:
        PROJECT_FILE_PATH: TXC.JSCompiler.csproj
        PACKAGE_NAME: TXC.JSCompiler
        INCLUDE_SYMBOLS: true
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
    - name: Create release
      id: create_release
      if: success() && steps.publish_nuget.outputs.version != ''
      run: gh release create ${{ steps.publish_nuget.outputs.version }} --generate-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
